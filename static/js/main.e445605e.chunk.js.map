{"version":3,"sources":["components/styleComponets/globalStyle.js","components/styleComponets/styleVariables.js","components/styleComponets/Button.styles.js","context/DataContext.js","components/TopButtons.jsx","components/styleComponets/Modal.styles.js","components/Dropdown.jsx","components/Createbrand.jsx","components/CreateCategory.jsx","components/Createproduct.jsx","components/Modal.jsx","pages/List.jsx","App.jsx","index.js"],"names":["GlobalStyle","createGlobalStyle","Colors","MotherLi","styled","li","Span","span","Li","Button","button","SmButton","DataContext","createContext","DataProvider","props","useState","value","setValue","count","setCount","modalIsOpen","setModalIsOpen","modalType","setModalType","useEffect","jsondata","categories","Remove","id","splice","val","brand","brands","prod","products","Create","name","push","Date","getTime","ctx","brandx","HandleModal","Provider","children","TopButtons","useContext","onClick","open","ModalBg","div","ModalWrapper","ModalContent","CloseModalButton","MdClose","ModalInput","input","ModalSelect","select","Dropdown","setSelected","type","category","data","onChange","e","target","map","object","index","Createbrand","selected","newBrand","setNewBrand","disabled","onInput","parseInt","CreateCategory","newCategory","setNewCategory","Createproduct","selectedCat","setSelectedCat","selectedBrand","setSelectedBrand","newProduct","setNewProduct","product","Modal","close","List","modal","catx","prodx","App","style","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e445605e.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n*{\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: 'Roboto', sans-serif;\n  font-size: 1rem;\n  color: black;\n}\n`;\n","import styled from \"styled-components\";\n\nexport const Colors = {\n  dark: \"#222831\",\n  light: \"#eeeeee\",\n  grey: \"#393e46\",\n  orange: \"#fd7014\",\n  white: \"white\",\n  black: \"black\",\n};\n\nexport const MotherLi = styled.li`\n  border-left: 1px solid #393e46;\n  list-style-type: none;\n  padding: 20px;\n  padding-left: 30px;\n`;\n\nexport const Span = styled.span`\n  padding: 10px;\n  margin: 10px;\n`;\n\nexport const Li = styled.li`\n  list-style-type: none;\n  padding-left: -20px;\n`;\n","import styled from \"styled-components\";\nimport { Colors } from \"./styleVariables\";\n\nexport const Button = styled.button`\n  padding: 2px;\n  margin: 5px;\n  width: 150px;\n  height: 35px;\n  background-color: ${Colors.dark};\n  border-color: ${Colors.dark};\n  border-radius: 10px;\n  cursor: pointer;\n  color: white;\n  :hover {\n    color: ${Colors.orange};\n  }\n  :disabled {\n    color: ${Colors.grey};\n    :hover {\n      color: ${Colors.grey};\n    }\n  }\n`;\n\nexport const SmButton = styled.button`\n  background-color: ${Colors.orange};\n  color: white;\n  margin-left: 20px;\n  border-radius: 5px;\n  padding: 2px;\n  border-color: ${Colors.orange};\n  cursor: pointer;\n`;\n","import React, { useState, createContext, useEffect } from \"react\";\nimport jsondata from \"../responseData.json\";\n\n//\nexport const DataContext = createContext();\nexport const DataProvider = (props) => {\n  //\n  const [value, setValue] = useState();\n  const [count, setCount] = useState(0);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalType, setModalType] = useState(0);\n\n  //\n  useEffect(() => {\n    setValue(jsondata.categories);\n  }, []);\n\n  class Remove {\n    static category(id) {\n      value.splice(id, 1);\n      setCount(count + 1);\n    }\n    static brand(val, brand) {\n      value[val].brands.splice(brand, 1);\n      setCount(count + 1);\n    }\n    static product(val, brand, prod) {\n      value[val].brands[brand].products.splice(prod, 1);\n      setCount(count + 1);\n    }\n  }\n\n  class Create {\n    static category({ name }) {\n      value.push({\n        id: new Date().getTime(),\n        name: name,\n        brands: [],\n      });\n      setCount(count + 1);\n    }\n\n    static brand({ ctx, name }) {\n      value[ctx].brands.push({\n        id: new Date().getTime(),\n        name: name,\n        products: [],\n      });\n      setCount(count + 1);\n    }\n    static product({ ctx, brandx, name }) {\n      value[ctx].brands[brandx].products.push({\n        id: new Date().getTime(),\n        name: name,\n      });\n      setCount(count + 1);\n    }\n  }\n\n  class HandleModal {\n    static open(value) {\n      setModalIsOpen(true);\n      setModalType(value);\n    }\n    static close() {\n      setModalIsOpen(false);\n      setModalType(\"\");\n    }\n  }\n  return (\n    <DataContext.Provider\n      value={{\n        value,\n        Remove,\n        Create,\n        HandleModal,\n        modalIsOpen,\n        modalType,\n      }}\n    >\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"./styleComponets/Button.styles\";\nimport { DataContext } from \"../context/DataContext\";\nexport const TopButtons = () => {\n  const { HandleModal } = useContext(DataContext);\n\n  return (\n    <div>\n      <Button onClick={() => HandleModal.open(\"category\")}>Add category</Button>\n      <Button onClick={() => HandleModal.open(\"brand\")}>Add brand</Button>\n      <Button onClick={() => HandleModal.open(\"product\")}>Add product</Button>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\nimport { MdClose } from \"react-icons/md\";\n\nexport const Modalcontainer = styled.div``;\n\nexport const ModalBg = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalWrapper = styled.div`\n  width: 500px;\n  height: 300px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const ModalInput = styled.input`\n  border-width: 1px;\n  border-radius: 8px;\n  height: 40px;\n  padding: 10px;\n  margin: 10px;\n  outline: none;\n`;\n\nexport const ModalSelect = styled.select`\n  border-radius: 8px;\n  height: 40px;\n  width: 230px;\n  padding: 10px;\n  margin: 10px;\n  outline: none;\n`;\n","import React, { useContext } from \"react\";\nimport { ModalSelect } from \"./styleComponets/Modal.styles\";\nimport { DataContext } from \"../context/DataContext\";\n\nconst Dropdown = ({ setSelected, type, category }) => {\n  const { value } = useContext(DataContext);\n\n  const data = type === \"category\" ? value : value[category].brands;\n  return (\n    <div>\n      <ModalSelect onChange={(e) => setSelected(e.target.value)}>\n        <option>Select</option>\n        {data.map((object, index) => {\n          return <option value={index}>{object.name}</option>;\n        })}\n      </ModalSelect>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { useState, useContext } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport { ModalInput } from \"./styleComponets/Modal.styles\";\nimport { Button } from \"./styleComponets/Button.styles\";\nimport { DataContext } from \"../context/DataContext\";\nexport const Createbrand = () => {\n  const { Create } = useContext(DataContext);\n\n  const [selected, setSelected] = useState();\n  const [newBrand, setNewBrand] = useState();\n  const disabled = !selected || !newBrand;\n  const createBrand = () => {\n    Create.brand({ ctx: parseInt(selected, 10), name: newBrand });\n    setNewBrand(\"\");\n  };\n  return (\n    <div>\n      <p>\n        <h1>Create Brand</h1>\n      </p>\n      <div>Select category</div>\n      <Dropdown type={\"category\"} setSelected={(e) => setSelected(e)} />\n      <div>Brand name</div>\n      <ModalInput\n        onInput={(e) => setNewBrand(e.target.value)}\n        value={newBrand}\n      />\n      <Button disabled={disabled} onClick={() => createBrand()}>\n        Create\n      </Button>\n    </div>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { ModalInput } from \"./styleComponets/Modal.styles\";\nimport { Button } from \"./styleComponets/Button.styles\";\nimport { DataContext } from \"../context/DataContext\";\n\nexport const CreateCategory = () => {\n  const { Create } = useContext(DataContext);\n\n  const [newCategory, setNewCategory] = useState();\n  const disabled = !newCategory;\n\n  const createCategory = () => {\n    Create.category({ name: newCategory });\n    setNewCategory(\"\");\n  };\n  return (\n    <div>\n      <p>\n        <h1>Create Category</h1>\n      </p>\n      <div>Category name</div>\n      <ModalInput\n        onInput={(e) => setNewCategory(e.target.value)}\n        value={newCategory}\n      />\n      <Button disabled={disabled} onClick={() => createCategory()}>\n        Create\n      </Button>\n    </div>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport { ModalInput } from \"./styleComponets/Modal.styles\";\nimport { Button } from \"./styleComponets/Button.styles\";\nimport { DataContext } from \"../context/DataContext\";\n\nexport const Createproduct = () => {\n  const { Create } = useContext(DataContext);\n  const [selectedCat, setSelectedCat] = useState();\n  const [selectedBrand, setSelectedBrand] = useState();\n  const [newProduct, setNewProduct] = useState();\n\n  const createProduct = () => {\n    Create.product({\n      ctx: parseInt(selectedCat, 10),\n      brandx: parseInt(selectedBrand),\n      name: newProduct,\n    });\n    setNewProduct(\"\");\n  };\n  const disabled = !selectedCat || !selectedBrand || !newProduct;\n\n  return (\n    <div>\n      <p>\n        <h1>Create Product</h1>\n      </p>\n      <div>Select category</div>\n      <Dropdown type={\"category\"} setSelected={(e) => setSelectedCat(e)} />\n      {selectedCat && (\n        <div>\n          <div>Select brand</div>\n          <Dropdown\n            type={\"brand\"}\n            category={selectedCat}\n            setSelected={(e) => setSelectedBrand(e)}\n          />\n        </div>\n      )}\n\n      <div>Brand name</div>\n      <ModalInput\n        onInput={(e) => setNewProduct(e.target.value)}\n        value={newProduct}\n      />\n      <Button disabled={disabled} onClick={() => createProduct()}>\n        Create\n      </Button>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Createbrand } from \"./Createbrand\";\nimport { CreateCategory } from \"./CreateCategory\";\nimport { Createproduct } from \"./Createproduct\";\nimport {\n  ModalBg,\n  ModalWrapper,\n  ModalContent,\n  CloseModalButton,\n} from \"./styleComponets/Modal.styles\";\nimport { DataContext } from \"../context/DataContext\";\n\nconst Modal = () => {\n  const { HandleModal, modalType, modalIsOpen } = useContext(DataContext);\n\n  return (\n    <>\n      {modalIsOpen ? (\n        <ModalBg>\n          <ModalWrapper>\n            <ModalContent>\n              {modalType === \"category\" ? (\n                <CreateCategory />\n              ) : modalType === \"brand\" ? (\n                <Createbrand />\n              ) : (\n                <Createproduct />\n              )}\n            </ModalContent>\n            <CloseModalButton\n              aria-label=\"Close modal\"\n              onClick={() => HandleModal.close()}\n            />\n          </ModalWrapper>\n        </ModalBg>\n      ) : null}\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useContext } from \"react\";\nimport {\n  MotherLi,\n  Span,\n  Li,\n} from \"../components/styleComponets/styleVariables\";\nimport { SmButton } from \"../components/styleComponets/Button.styles\";\nimport { DataContext } from \"../context/DataContext\";\nimport Modal from \"../components/Modal\";\n\n//\nexport const List = ({ modal }) => {\n  const { Remove, value } = useContext(DataContext);\n\n  const category = (catx) => {\n    Remove.category(catx);\n  };\n\n  const brands = (catx, brandx) => {\n    Remove.brand(catx, brandx);\n  };\n\n  const product = (catx, brandx, prodx) => {\n    Remove.product(catx, brandx, prodx);\n  };\n\n  return (\n    <div>\n      <Modal modal={modal} />\n      <Li>\n        <ul>\n          {value &&\n            value.map((categories, catx) => {\n              return (\n                <Li>\n                  {/* categories  */}\n                  <span key={categories.id}>\n                    {categories.name}\n                    <SmButton onClick={() => category(catx)}>Delete</SmButton>\n                  </span>\n\n                  {/* categorie brand  */}\n                  {categories.brands.map((brand, brandx) => {\n                    return (\n                      <MotherLi>\n                        <Li>\n                          <Span key={brand.id}>\n                            {brand.name}\n                            <SmButton onClick={() => brands(catx, brandx)}>\n                              Delete\n                            </SmButton>\n                          </Span>\n                        </Li>\n                        <ul>\n                          {/* products  */}\n                          {brand.products.map((prod, prodx) => {\n                            return (\n                              <MotherLi key={prod.id}>\n                                {prod.name}\n                                <SmButton\n                                  onClick={() => product(catx, brandx, prodx)}\n                                >\n                                  Delete\n                                </SmButton>\n                              </MotherLi>\n                            );\n                          })}\n                        </ul>\n                      </MotherLi>\n                    );\n                  })}\n                </Li>\n              );\n            })}\n        </ul>\n      </Li>\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\n\nimport { GlobalStyle } from \"./components/styleComponets/globalStyle\";\nimport { TopButtons } from \"./components/TopButtons\";\n\nimport { DataProvider } from \"./context/DataContext\";\nimport List from \"./pages/List\";\nconst App = () => {\n  return (\n    <DataProvider>\n      <div style={{ padding: \"2%\" }}>\n        <TopButtons />\n        <List />\n        <GlobalStyle />\n      </div>\n    </DataProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}